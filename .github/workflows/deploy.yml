name: CI/CD - Build and Push to ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ECR_REPOSITORY: devashish/tribe-backend
  IMAGE_TAG: ${{ github.sha }}
  WORKING_DIRECTORY: spring-webapi

jobs:
  build-test-and-push:
    name: Build, Test, and Push Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/pom.xml

      - name: Run test suite
        run: mvn -B test
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Run buid mock production package
        run: mvn -B -DskipTests package "-Dspring.profiles.active=test"
        working-directory: ${{ env.WORKING_DIRECTORY }}
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push image (commit tag)
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.WORKING_DIRECTORY }}
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Tag image as latest
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag \
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} \
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          
      - name: Download current ECS task definition
        run: |
            aws ecs describe-task-definition \
              --task-definition backend-ecs-deployment \
              --query taskDefinition > task-def.json
              
      - name: Update task definition with new image
        run: |
          NEW_IMAGE="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
          cat task-def.json | jq --arg IMG "$NEW_IMAGE" '.containerDefinitions[0].image = $IMG' > task-def-updated.json

      - name: Register new task definition revision
        run: |
          TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://task-def-updated.json \
            --query taskDefinition.taskDefinitionArn \
            --output text)
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Update ECS service to use new revision
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE }} \
            --task-definition ${{ env.TASK_DEF_ARN }}
